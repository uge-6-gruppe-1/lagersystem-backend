services:
  db:
    image: postgres:17
    container_name: ims_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ims_db_data:/var/lib/postgresql/data
    networks:
      - ims_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ims_backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "8080:80"
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ims_network

  api:
    build: .
    ports:
      - "8080:80"            # hostPort:containerPort
    environment:
      - ASPNETCORE_URLS=http://+:80
volumes:
  ims_db_data:

networks:
  ims_network:
    driver: bridge